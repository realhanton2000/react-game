{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","renderSquare","React","Component","Game","history","stepNumber","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"gOAyBA,SAASA,EAAOC,GACZ,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,Q,IAKTC,E,kDACF,WAAYJ,GAAQ,IAAD,8BACf,cAAMA,IACDK,MAAQ,CACXC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJI,E,gDAQrB,SAAaC,GAAI,IAAD,OACd,OAAO,cAACX,EAAD,CACPI,MAAOQ,KAAKX,MAAMM,QAAQI,GAC1BR,QAAS,kBAAM,EAAKF,MAAME,QAAQQ,Q,oBAIpC,WAGE,OACE,gCACE,sBAAKT,UAAU,YAAf,UACGU,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,MAErB,sBAAKX,UAAU,YAAf,UACGU,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,MAErB,sBAAKX,UAAU,YAAf,UACGU,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,a,GAlCTC,IAAMC,WAyCpBC,E,kDACF,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IACDK,MAAQ,CACXW,QAAS,CAAC,CACRV,QAASC,MAAM,GAAGC,KAAK,QAEzBS,WAAY,EACZR,SAAS,GAPI,E,+CAYjB,SAAYC,GACV,IAAMM,EAAUL,KAAKN,MAAMW,QAAQE,MAAM,EAAGP,KAAKN,MAAMY,WAAa,GAE9DX,EADUU,EAAQA,EAAQG,OAAS,GACjBb,QAAQY,QAC5BE,EAAgBd,IAAYA,EAAQI,KAGxCJ,EAAQI,GAAKC,KAAKN,MAAMI,QAAU,IAAM,IACxCE,KAAKU,SAAS,CACVL,QAASA,EAAQM,OAAO,CAAC,CACrBhB,QAASA,KAEbW,WAAYD,EAAQG,OACpBV,SAAUE,KAAKN,MAAMI,a,oBAK7B,SAAOc,GACHZ,KAAKU,SAAS,CACZJ,WAAYM,EACZd,QAAUc,EAAO,IAAO,M,oBAIhC,WAAU,IAoBJC,EApBG,OACDR,EAAUL,KAAKN,MAAMW,QACrBS,EACJT,EAAQL,KAAKN,MAAMY,YAIfS,EAASN,EAAgBK,EAAQnB,SAGjCqB,EAAQX,EAAQY,KAAI,SAACL,EAAMM,GAC7B,IAAMC,EACJ,eAAiBD,EACnB,OACI,6BACA,wBAAQ3B,QAAS,kBAAM,EAAK6B,OAAOF,IAAnC,SAA2CC,KADlCD,MAajB,OALEL,EADEE,EACO,WAAaA,EAEb,iBAAmBf,KAAKN,MAAMI,QAAU,IAAM,KAIvD,sBAAKR,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACAE,QAASmB,EAAQnB,QACjBJ,QAAS,SAACQ,GAAD,OAAO,EAAKsB,YAAYtB,QAGnC,sBAAKT,UAAU,YAAf,UACE,8BAAMuB,IACN,6BAAKG,c,GA3EId,IAAMC,WAkFzB,SAASM,EAAgBd,GAWrB,IAVA,IAAM2B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAvB,EAAI,EAAGA,EAAIuB,EAAMd,OAAQT,IAAK,CACrC,kBAAkBuB,EAAMvB,GAAxB,GAAOwB,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAI9B,EAAQ4B,IAAM5B,EAAQ4B,KAAO5B,EAAQ6B,IAAM7B,EAAQ4B,KAAO5B,EAAQ8B,GACpE,OAAO9B,EAAQ4B,GAGnB,OAAO,KAKXG,IAASC,OACP,cAACvB,EAAD,IACAwB,SAASC,eAAe,W","file":"static/js/main.75b4426c.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n/*\r\nclass Square extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          value: null,\r\n        };\r\n      }\r\n\r\n  render() {\r\n    return (\r\n      <button \r\n        className=\"square\" \r\n        onClick={() => this.props.onClick()} // props.onClick() = Square.onClick()\r\n      >\r\n        {this.props.value}\r\n      </button>\r\n    );\r\n  }\r\n}*/\r\n\r\nfunction Square(props) {\r\n    return (\r\n      <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          squares: Array(9).fill(null),\r\n          xIsNext: true,\r\n        };\r\n      }\r\n\r\n  renderSquare(i) {\r\n    return <Square \r\n    value={this.props.squares[i]}\r\n    onClick={() => this.props.onClick(i)}\r\n    />;\r\n  }\r\n\r\n  render() {\r\n    //const status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          history: [{\r\n            squares: Array(9).fill(null),\r\n          }],\r\n          stepNumber: 0,\r\n          xIsNext: true,\r\n        };\r\n      }\r\n\r\n\r\n      handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n          }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n              }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n        //console.log(\"here-\".concat(this.state.history.length - 1));\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n          stepNumber: step,\r\n          xIsNext: (step % 2) === 0,\r\n        });\r\n      }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = //history[history.length - 1]; \r\n      history[this.state.stepNumber];\r\n      //console.log(history.length - 1);\r\n     // console.log(this.state.history.length - 1);\r\n     // console.log(this.state.stepNumber);\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    //map((element, index) => { ... } )\r\n    const moves = history.map((step, move) => {\r\n        const desc = \r\n          'Go to move #' + move;\r\n        return (\r\n            <li key={move}>\r\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n          </li>\r\n        );\r\n      });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board \r\n          squares={current.squares}\r\n          onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}